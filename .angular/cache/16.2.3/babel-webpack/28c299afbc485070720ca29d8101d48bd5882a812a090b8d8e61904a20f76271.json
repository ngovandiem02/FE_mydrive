{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FileService {\n  constructor(http) {\n    this.http = http;\n    this.server = 'http://localhost:8080';\n  }\n  // define function to upload files\n  upload(formData) {\n    return this.http.post(`${this.server}/file/upload`, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n  // define function to download files\n  download(filename) {\n    return this.http.get(`${this.server}/file/download/${filename}/`, {\n      reportProgress: true,\n      observe: 'events',\n      responseType: 'blob'\n    });\n  }\n}\n_class = FileService;\n_class.ɵfac = function FileService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["FileService","constructor","http","server","upload","formData","post","reportProgress","observe","download","filename","get","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\diemn02\\Downloads\\uploadanddownload\\src\\app\\file.service.ts"],"sourcesContent":["import { HttpClient, HttpEvent } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class FileService {\n  private server ='http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n // define function to upload files\n upload(formData: FormData): Observable<HttpEvent<string[]>> {\n  return this.http.post<string[]>(`${this.server}/file/upload`, formData, {\n    reportProgress: true,\n    observe: 'events'\n  });\n}\n\n// define function to download files\ndownload(filename: string): Observable<HttpEvent<Blob>> {\n  return this.http.get(`${this.server}/file/download/${filename}/`, {\n    reportProgress: true,\n    observe: 'events',\n    responseType: 'blob'\n  });\n}\n}\n"],"mappings":";;;AAKA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAE,uBAAuB;EAEC;EACzC;EACAC,MAAMA,CAACC,QAAkB;IACxB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAW,GAAG,IAAI,CAACH,MAAM,cAAc,EAAEE,QAAQ,EAAE;MACtEE,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE;KACV,CAAC;EACJ;EAEA;EACAC,QAAQA,CAACC,QAAgB;IACvB,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,GAAG,IAAI,CAACR,MAAM,kBAAkBO,QAAQ,GAAG,EAAE;MAChEH,cAAc,EAAE,IAAI;MACpBC,OAAO,EAAE,QAAQ;MACjBI,YAAY,EAAE;KACf,CAAC;EACJ;;SAnBaZ,WAAW;;mBAAXA,MAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAXhB,MAAW;EAAAiB,OAAA,EAAXjB,MAAW,CAAAkB,IAAA;EAAAC,UAAA,EADC;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}