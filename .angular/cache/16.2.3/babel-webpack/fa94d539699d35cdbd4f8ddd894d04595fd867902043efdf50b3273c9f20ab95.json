{"ast":null,"code":"var _class;\nimport { saveAs } from 'file-saver';\nimport { HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./file.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 9)(2, \"div\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.fileStatus.percent, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.fileStatus.requestType, \" \", ctx_r0.fileStatus.percent, \" \");\n  }\n}\nfunction AppComponent_div_18_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_18_div_3_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const filename_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onDownloadFile(filename_r3));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"a\", 15);\n    i0.ɵɵtext(4, \"Download\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const filename_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", filename_r3, \" \");\n  }\n}\nfunction AppComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h3\");\n    i0.ɵɵtext(2, \"Processed files\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AppComponent_div_18_div_3_Template, 6, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.filenames);\n  }\n}\nexport class AppComponent {\n  constructor(fileService) {\n    this.fileService = fileService;\n    this.filenames = [];\n    this.fileStatus = {\n      status: '',\n      requestType: '',\n      percent: 0\n    };\n  }\n  // define a function to upload files\n  onUploadFiles(files) {\n    const formData = new FormData();\n    for (const file of files) {\n      formData.append('files', file, file.name);\n    }\n    this.fileService.upload(formData).subscribe(event => {\n      console.log(event);\n      this.resportProgress(event);\n    }, error => {\n      console.log(error);\n    });\n  }\n  // define a function to download files\n  onDownloadFile(filename) {\n    this.fileService.download(filename).subscribe(event => {\n      console.log(event);\n      this.resportProgress(event);\n    }, error => {\n      console.log(error);\n    });\n  }\n  resportProgress(httpEvent) {\n    switch (httpEvent.type) {\n      case HttpEventType.UploadProgress:\n        this.updateStatus(httpEvent.loaded, httpEvent.total, 'Uploading... ');\n        break;\n      case HttpEventType.DownloadProgress:\n        this.updateStatus(httpEvent.loaded, httpEvent.total, 'Downloading... ');\n        break;\n      case HttpEventType.ResponseHeader:\n        console.log('Header returned', httpEvent);\n        break;\n      case HttpEventType.Response:\n        if (httpEvent.body instanceof Array) {\n          this.fileStatus.status = 'done';\n          for (const filename of httpEvent.body) {\n            this.filenames.unshift(filename);\n          }\n        } else {\n          saveAs(new File([httpEvent.body], httpEvent.headers.get('File-Name'), {\n            type: `${httpEvent.headers.get('Content-Type')};charset=utf-8`\n          }));\n          // saveAs(new Blob([httpEvent.body!],\n          //   { type: `${httpEvent.headers.get('Content-Type')};charset=utf-8`}),\n          //    httpEvent.headers.get('File-Name'));\n        }\n\n        this.fileStatus.status = 'done';\n        break;\n      default:\n        console.log(httpEvent);\n        break;\n    }\n  }\n  updateStatus(loaded, total, requestType) {\n    this.fileStatus.status = 'progress';\n    this.fileStatus.requestType = requestType;\n    this.fileStatus.percent = Math.round(100 * loaded / total);\n  }\n}\n_class = AppComponent;\n_class.ɵfac = function AppComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FileService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-root\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"container\", 2, \"margin-top\", \"20px\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-body\"], [4, \"ngIf\"], [\"enctype\", \"multipart/form-data\"], [1, \"form-group\"], [\"type\", \"file\", \"name\", \"files\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"class\", \"js-upload-finished\", 4, \"ngIf\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"50\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-animated\", \"bg-info\"], [1, \"js-upload-finished\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group\"], [1, \"list-group-item\", \"list-group-item-success\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"alert-success\", \"float-right\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\");\n      i0.ɵɵtext(4, \"Upload and Download Files\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵelementStart(6, \"div\", 3)(7, \"strong\");\n      i0.ɵɵtext(8, \"Select files from your computer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, AppComponent_div_9_Template, 4, 4, \"div\", 4);\n      i0.ɵɵelement(10, \"hr\");\n      i0.ɵɵelementStart(11, \"form\", 5)(12, \"fieldset\")(13, \"div\", 6)(14, \"div\")(15, \"input\", 7);\n      i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_15_listener($event) {\n        return ctx.onUploadFiles($event.target == null ? null : $event.target.files);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(16, \" --> \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(17, \"br\");\n      i0.ɵɵtemplate(18, AppComponent_div_18_Template, 4, 1, \"div\", 8);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.fileStatus.status === \"progress\");\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngIf\", ctx.filenames.length > 0);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["saveAs","HttpEventType","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵstyleProp","ctx_r0","fileStatus","percent","ɵɵtextInterpolate2","requestType","ɵɵlistener","AppComponent_div_18_div_3_Template_a_click_1_listener","restoredCtx","ɵɵrestoreView","_r5","filename_r3","$implicit","ctx_r4","ɵɵnextContext","ɵɵresetView","onDownloadFile","ɵɵelement","ɵɵtextInterpolate1","ɵɵtemplate","AppComponent_div_18_div_3_Template","ɵɵproperty","ctx_r1","filenames","AppComponent","constructor","fileService","status","onUploadFiles","files","formData","FormData","file","append","name","upload","subscribe","event","console","log","resportProgress","error","filename","download","httpEvent","type","UploadProgress","updateStatus","loaded","total","DownloadProgress","ResponseHeader","Response","body","Array","unshift","File","headers","get","Math","round","ɵɵdirectiveInject","i1","FileService","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","AppComponent_div_9_Template","AppComponent_Template_input_change_15_listener","$event","target","AppComponent_div_18_Template","length"],"sources":["C:\\Users\\diemn02\\Downloads\\uploadanddownload\\src\\app\\app.component.ts","C:\\Users\\diemn02\\Downloads\\uploadanddownload\\src\\app\\app.component.html"],"sourcesContent":["import { FileService } from './file.service';\nimport { Component } from '@angular/core';\nimport { saveAs } from 'file-saver';\nimport { HttpErrorResponse, HttpEvent, HttpEventType } from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  filenames: string[] = [];\n  fileStatus = { status: '', requestType: '', percent: 0 };\n\n  constructor(private fileService: FileService){}\n\n  // define a function to upload files\n  onUploadFiles(files: File[]): void {\n    const formData = new FormData();\n    for (const file of files) { formData.append('files', file, file.name); }\n    this.fileService.upload(formData).subscribe(\n      event => {\n        console.log(event);\n        this.resportProgress(event);\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error);\n      }\n    );\n  }\n\n  // define a function to download files\n  onDownloadFile(filename: string): void {\n    this.fileService.download(filename).subscribe(\n      event => {\n        console.log(event);\n        this.resportProgress(event);\n      },\n      (error: HttpErrorResponse) => {\n        console.log(error);\n      }\n    );\n  }\n  private resportProgress(httpEvent: HttpEvent<string[] | Blob>): void {\n    switch(httpEvent.type) {\n      case HttpEventType.UploadProgress:\n        this.updateStatus(httpEvent.loaded, httpEvent.total!, 'Uploading... ');\n        break;\n      case HttpEventType.DownloadProgress:\n        this.updateStatus(httpEvent.loaded, httpEvent.total!, 'Downloading... ');\n        break;\n      case HttpEventType.ResponseHeader:\n        console.log('Header returned', httpEvent);\n        break;\n      case HttpEventType.Response:\n        if (httpEvent.body instanceof Array) {\n          this.fileStatus.status = 'done';\n          for (const filename of httpEvent.body) {\n            this.filenames.unshift(filename);\n          }\n        } else {\n          saveAs(new File([httpEvent.body!], httpEvent.headers.get('File-Name')!,\n                  {type: `${httpEvent.headers.get('Content-Type')};charset=utf-8`}));\n          // saveAs(new Blob([httpEvent.body!],\n          //   { type: `${httpEvent.headers.get('Content-Type')};charset=utf-8`}),\n          //    httpEvent.headers.get('File-Name'));\n        }\n        this.fileStatus.status = 'done';\n        break;\n        default:\n          console.log(httpEvent);\n          break;\n\n    }\n  }\n\n  private updateStatus(loaded: number, total: number, requestType: string): void {\n    this.fileStatus.status = 'progress';\n    this.fileStatus.requestType = requestType;\n    this.fileStatus.percent = Math.round(100 * loaded / total);\n  }\n}\n","<div class=\"container\" style=\"margin-top: 20px;\">\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h4>Upload and Download Files</h4>\n    </div><br>\n    <div class=\"panel-body\">\n      <strong>Select files from your computer</strong>\n      <div *ngIf=\"fileStatus.status==='progress'\">\n        <div class=\"progress\">\n          <div [style.width.%]=\"fileStatus.percent\" class=\"progress-bar progress-bar-animated bg-info\" role=\"progressbar\" aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n              {{ fileStatus.requestType }} {{ fileStatus.percent }}\n            </div>\n        </div>\n      </div> <hr>\n\n      <form enctype=\"multipart/form-data\">\n        <fieldset>\n          <div class=\"form-group\">\n            <div>\n              <input type=\"file\" (change)=\"onUploadFiles($event.target?.files)\" name=\"files\" multiple class=\"form-control\" /> -->\n\n            </div>\n          </div>\n        </fieldset>\n      </form>\n\n      <br>\n\n      <div *ngIf=\"filenames.length > 0\" class=\"js-upload-finished\">\n        <h3>Processed files</h3>\n        <div *ngFor=\"let filename of filenames\" class=\"list-group\">\n          <a (click)=\"onDownloadFile(filename)\" class=\"list-group-item list-group-item-success\" style=\"cursor: pointer;\">\n            {{ filename }}\n            <a class=\"alert-success float-right\">Download</a>\n          </a><br>\n        </div>\n      </div>\n\n    </div>\n  </div>\n    </div>\n"],"mappings":";AAEA,SAASA,MAAM,QAAQ,YAAY;AACnC,SAAuCC,aAAa,QAAQ,sBAAsB;;;;;;ICI5EC,EAAA,CAAAC,cAAA,UAA4C;IAGpCD,EAAA,CAAAE,MAAA,GACF;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAFHH,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAK,WAAA,UAAAC,MAAA,CAAAC,UAAA,CAAAC,OAAA,MAAoC;IACrCR,EAAA,CAAAI,SAAA,GACF;IADEJ,EAAA,CAAAS,kBAAA,MAAAH,MAAA,CAAAC,UAAA,CAAAG,WAAA,OAAAJ,MAAA,CAAAC,UAAA,CAAAC,OAAA,MACF;;;;;;IAmBJR,EAAA,CAAAC,cAAA,cAA2D;IACtDD,EAAA,CAAAW,UAAA,mBAAAC,sDAAA;MAAA,MAAAC,WAAA,GAAAb,EAAA,CAAAc,aAAA,CAAAC,GAAA;MAAA,MAAAC,WAAA,GAAAH,WAAA,CAAAI,SAAA;MAAA,MAAAC,MAAA,GAAAlB,EAAA,CAAAmB,aAAA;MAAA,OAASnB,EAAA,CAAAoB,WAAA,CAAAF,MAAA,CAAAG,cAAA,CAAAL,WAAA,CAAwB;IAAA,EAAC;IACnChB,EAAA,CAAAE,MAAA,GACA;IAAAF,EAAA,CAAAC,cAAA,YAAqC;IAAAD,EAAA,CAAAE,MAAA,eAAQ;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC/CH,EAAA,CAAAsB,SAAA,SAAI;IACVtB,EAAA,CAAAG,YAAA,EAAM;;;;IAHFH,EAAA,CAAAI,SAAA,GACA;IADAJ,EAAA,CAAAuB,kBAAA,MAAAP,WAAA,MACA;;;;;IALNhB,EAAA,CAAAC,cAAA,cAA6D;IACvDD,EAAA,CAAAE,MAAA,sBAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxBH,EAAA,CAAAwB,UAAA,IAAAC,kCAAA,kBAKM;IACRzB,EAAA,CAAAG,YAAA,EAAM;;;;IANsBH,EAAA,CAAAI,SAAA,GAAY;IAAZJ,EAAA,CAAA0B,UAAA,YAAAC,MAAA,CAAAC,SAAA,CAAY;;;ADpB9C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAH/B,KAAAH,SAAS,GAAa,EAAE;IACxB,KAAArB,UAAU,GAAG;MAAEyB,MAAM,EAAE,EAAE;MAAEtB,WAAW,EAAE,EAAE;MAAEF,OAAO,EAAE;IAAC,CAAE;EAEV;EAE9C;EACAyB,aAAaA,CAACC,KAAa;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/B,KAAK,MAAMC,IAAI,IAAIH,KAAK,EAAE;MAAEC,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAED,IAAI,EAAEA,IAAI,CAACE,IAAI,CAAC;;IACrE,IAAI,CAACR,WAAW,CAACS,MAAM,CAACL,QAAQ,CAAC,CAACM,SAAS,CACzCC,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAI,CAACG,eAAe,CAACH,KAAK,CAAC;IAC7B,CAAC,EACAI,KAAwB,IAAI;MAC3BH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEA;EACAzB,cAAcA,CAAC0B,QAAgB;IAC7B,IAAI,CAAChB,WAAW,CAACiB,QAAQ,CAACD,QAAQ,CAAC,CAACN,SAAS,CAC3CC,KAAK,IAAG;MACNC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,IAAI,CAACG,eAAe,CAACH,KAAK,CAAC;IAC7B,CAAC,EACAI,KAAwB,IAAI;MAC3BH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EACQD,eAAeA,CAACI,SAAqC;IAC3D,QAAOA,SAAS,CAACC,IAAI;MACnB,KAAKnD,aAAa,CAACoD,cAAc;QAC/B,IAAI,CAACC,YAAY,CAACH,SAAS,CAACI,MAAM,EAAEJ,SAAS,CAACK,KAAM,EAAE,eAAe,CAAC;QACtE;MACF,KAAKvD,aAAa,CAACwD,gBAAgB;QACjC,IAAI,CAACH,YAAY,CAACH,SAAS,CAACI,MAAM,EAAEJ,SAAS,CAACK,KAAM,EAAE,iBAAiB,CAAC;QACxE;MACF,KAAKvD,aAAa,CAACyD,cAAc;QAC/Bb,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEK,SAAS,CAAC;QACzC;MACF,KAAKlD,aAAa,CAAC0D,QAAQ;QACzB,IAAIR,SAAS,CAACS,IAAI,YAAYC,KAAK,EAAE;UACnC,IAAI,CAACpD,UAAU,CAACyB,MAAM,GAAG,MAAM;UAC/B,KAAK,MAAMe,QAAQ,IAAIE,SAAS,CAACS,IAAI,EAAE;YACrC,IAAI,CAAC9B,SAAS,CAACgC,OAAO,CAACb,QAAQ,CAAC;;SAEnC,MAAM;UACLjD,MAAM,CAAC,IAAI+D,IAAI,CAAC,CAACZ,SAAS,CAACS,IAAK,CAAC,EAAET,SAAS,CAACa,OAAO,CAACC,GAAG,CAAC,WAAW,CAAE,EAC9D;YAACb,IAAI,EAAE,GAAGD,SAAS,CAACa,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;UAAgB,CAAC,CAAC,CAAC;UAC1E;UACA;UACA;;;QAEF,IAAI,CAACxD,UAAU,CAACyB,MAAM,GAAG,MAAM;QAC/B;MACA;QACEW,OAAO,CAACC,GAAG,CAACK,SAAS,CAAC;QACtB;;EAGR;EAEQG,YAAYA,CAACC,MAAc,EAAEC,KAAa,EAAE5C,WAAmB;IACrE,IAAI,CAACH,UAAU,CAACyB,MAAM,GAAG,UAAU;IACnC,IAAI,CAACzB,UAAU,CAACG,WAAW,GAAGA,WAAW;IACzC,IAAI,CAACH,UAAU,CAACC,OAAO,GAAGwD,IAAI,CAACC,KAAK,CAAC,GAAG,GAAGZ,MAAM,GAAGC,KAAK,CAAC;EAC5D;;SAtEWzB,YAAY;;mBAAZA,MAAY,EAAA7B,EAAA,CAAAkE,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;;QAAZvC,MAAY;EAAAwC,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCVzB3E,EAAA,CAAAC,cAAA,aAAiD;MAGvCD,EAAA,CAAAE,MAAA,gCAAyB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC9BH,EAAA,CAAAsB,SAAA,SAAI;MACVtB,EAAA,CAAAC,cAAA,aAAwB;MACdD,EAAA,CAAAE,MAAA,sCAA+B;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAChDH,EAAA,CAAAwB,UAAA,IAAAqD,2BAAA,iBAMM;MAAC7E,EAAA,CAAAsB,SAAA,UAAI;MAEXtB,EAAA,CAAAC,cAAA,eAAoC;MAITD,EAAA,CAAAW,UAAA,oBAAAmE,+CAAAC,MAAA;QAAA,OAAUH,GAAA,CAAA3C,aAAA,CAAA8C,MAAA,CAAAC,MAAA,kBAAAD,MAAA,CAAAC,MAAA,CAAA9C,KAAA,CAAmC;MAAA,EAAC;MAAjElC,EAAA,CAAAG,YAAA,EAA+G;MAACH,EAAA,CAAAE,MAAA,aAElH;MAAAF,EAAA,CAAAG,YAAA,EAAM;MAKZH,EAAA,CAAAsB,SAAA,UAAI;MAEJtB,EAAA,CAAAwB,UAAA,KAAAyD,4BAAA,iBAQM;MAERjF,EAAA,CAAAG,YAAA,EAAM;;;MA/BEH,EAAA,CAAAI,SAAA,GAAoC;MAApCJ,EAAA,CAAA0B,UAAA,SAAAkD,GAAA,CAAArE,UAAA,CAAAyB,MAAA,gBAAoC;MAqBpChC,EAAA,CAAAI,SAAA,GAA0B;MAA1BJ,EAAA,CAAA0B,UAAA,SAAAkD,GAAA,CAAAhD,SAAA,CAAAsD,MAAA,KAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}