{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport { HttpEventType } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./file.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 9)(2, \"div\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵstyleProp(\"width\", ctx_r0.fileStatus.percent, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r0.fileStatus.requestType, \" \", ctx_r0.fileStatus.percent, \" \");\n  }\n}\nfunction AppComponent_div_17_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 14)(2, \"strong\");\n    i0.ɵɵtext(3, \"File Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(4);\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7, \"File Size:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"br\");\n    i0.ɵɵelementStart(10, \"strong\");\n    i0.ɵɵtext(11, \"File Type:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵelementStart(14, \"a\", 15);\n    i0.ɵɵlistener(\"click\", function AppComponent_div_17_div_3_Template_a_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const fileInfo_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onDownloadFile(fileInfo_r3.name));\n    });\n    i0.ɵɵtext(15, \"Download\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const fileInfo_r3 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", fileInfo_r3.name, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", fileInfo_r3.size, \" bytes\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", fileInfo_r3.type, \"\");\n  }\n}\nfunction AppComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h3\");\n    i0.ɵɵtext(2, \"Processed files\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AppComponent_div_17_div_3_Template, 16, 3, \"div\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.fileInfos);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  var _class;\n  class AppComponent {\n    constructor(fileService) {\n      this.fileService = fileService;\n      this.title = 'uploadanddownload';\n      this.filenames = [];\n      this.fileStatus = {\n        status: '',\n        requestType: '',\n        percent: 0\n      };\n    }\n    // define a function to upload files\n    onUploadFiles(files) {\n      const formData = new FormData();\n      for (const file of files) {\n        formData.append('files', file, file.name);\n      }\n      this.fileService.upload(formData).subscribe(event => {\n        console.log(event);\n        this.resportProgress(event);\n      }, error => {\n        console.log(error);\n      });\n    }\n    // define a function to download files\n    onDownloadFile(filename) {\n      this.fileService.download(filename).subscribe(event => {\n        console.log(event);\n        this.resportProgress(event);\n      }, error => {\n        console.log(error);\n      });\n    }\n    resportProgress(httpEvent) {\n      switch (httpEvent.type) {\n        case HttpEventType.UploadProgress:\n          this.updateStatus(httpEvent.loaded, httpEvent.total, 'Uploading... ');\n          break;\n        case HttpEventType.DownloadProgress:\n          this.updateStatus(httpEvent.loaded, httpEvent.total, 'Downloading... ');\n          break;\n        case HttpEventType.ResponseHeader:\n          console.log('Header returned', httpEvent);\n          break;\n        case HttpEventType.Response:\n          if (httpEvent.body instanceof Array) {\n            this.fileStatus.status = 'done';\n            for (const filename of httpEvent.body) {\n              this.filenames.unshift(filename);\n            }\n          } else {\n            saveAs(new File([httpEvent.body], httpEvent.headers.get('File-Name'), {\n              type: `${httpEvent.headers.get('Content-Type')};charset=utf-8`\n            }));\n            // saveAs(new Blob([httpEvent.body!],\n            //   { type: `${httpEvent.headers.get('Content-Type')};charset=utf-8`}),\n            //    httpEvent.headers.get('File-Name'));\n          }\n\n          this.fileStatus.status = 'done';\n          break;\n        default:\n          console.log(httpEvent);\n          break;\n      }\n    }\n    updateStatus(loaded, total, requestType) {\n      this.fileStatus.status = 'progress';\n      this.fileStatus.requestType = requestType;\n      this.fileStatus.percent = Math.round(100 * loaded / total);\n    }\n  }\n  _class = AppComponent;\n  _class.ɵfac = function AppComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.FileService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-root\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[1, \"container\", 2, \"margin-top\", \"20px\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-body\"], [4, \"ngIf\"], [\"enctype\", \"multipart/form-data\"], [1, \"form-group\"], [\"type\", \"file\", \"name\", \"files\", \"multiple\", \"\", 1, \"form-control\", 3, \"change\"], [\"class\", \"js-upload-finished\", 4, \"ngIf\"], [1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuenow\", \"50\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-animated\", \"bg-info\"], [1, \"js-upload-finished\"], [\"class\", \"list-group\", 4, \"ngFor\", \"ngForOf\"], [1, \"list-group\"], [1, \"list-group-item\"], [1, \"btn\", \"btn-success\", 3, \"click\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h4\");\n        i0.ɵɵtext(4, \"Upload and Download Files\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"strong\");\n        i0.ɵɵtext(8, \"Select files from your computer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, AppComponent_div_9_Template, 4, 4, \"div\", 4);\n        i0.ɵɵelement(10, \"hr\");\n        i0.ɵɵelementStart(11, \"form\", 5)(12, \"fieldset\")(13, \"div\", 6)(14, \"div\")(15, \"input\", 7);\n        i0.ɵɵlistener(\"change\", function AppComponent_Template_input_change_15_listener($event) {\n          return ctx.onUploadFiles($event.target.files);\n        });\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(16, \"br\");\n        i0.ɵɵtemplate(17, AppComponent_div_17_Template, 4, 1, \"div\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.fileStatus.status === \"progress\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", (ctx.filenames == null ? null : ctx.filenames.length) > 0);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}